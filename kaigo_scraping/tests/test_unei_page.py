# coding: UTF-8

from unittest import TestCase
from kaigokensaku.unei_page import UneiPage
from bs4 import BeautifulSoup
from pprint import pprint as pp

class TestUneiPage(TestCase):

    def test_parse(self):
        f = open('testdata/unei.html', 'r')
        page_text = f.read()
        f.close()
        self.assertTrue('グループホームほのぼのさくら' in page_text)
        data = UneiPage.parse(page_text)

        self.maxDiff = None # テスト結果のデバッグ出力強化
        self.assertEqual(list(data.keys()), [
            '1．利用者の権利擁護のための取組',
            '2．利用者本位の介護サービスの提供',
            '3．相談、苦情等の対応のために講じている措置',
            '4．サービスの内容の評価や改善等',
            '5．サービスの質の確保、透明性の確保等のための外部機関等との連携',
            '6．適切な事業運営の確保',
            '7．事業所の運営管理、業務分担、情報の共有等',
            '8．安全管理及び衛生管理',
            '9．情報の管理、個人情報保護等',
            '10．その他、介護サービスの質の確保のために行っていること'
        ])

        key1 = '1．利用者の権利擁護のための取組'
        self.assertEqual(list(data[key1].keys()), [
            '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況',
            '(2) 利用者等の情報の把握及び課題分析の実施状況',
            '(3) 利用者に応じたサービス計画の作成、同意の取得状況',
            '(4) 利用料に関する説明の実施状況'
        ])

        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況'
        self.assertEqual(list(data[key1][key2].keys()), [
            '・利用を希望する者が自由に見られるようサービス提供契約前に、重要事項を記した文書のひな形を交付する仕組み等がある。',
            '・サービス提供契約前の問い合わせ及び見学に対応する仕組みがある。',
            '・利用申込者に対し、サービスの重要事項について説明し、サービス提供開始について同意を得ている。',
            '・サービス利用契約の際、利用申込者の判断能力に応じて、代理人等との契約を行ったり、立会人を求めている。',
            '・入居の受入にかかる基準や資格等があり、入居前に提示する仕組みがある。',
            '・退居を求める場合の基準について、利用者等に説明し、同意を得ている。'
        ])

        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況'
        key3 = '・利用を希望する者が自由に見られるようサービス提供契約前に、重要事項を記した文書のひな形を交付する仕組み等がある。'
        self.assertEqual(list(data[key1][key2][key3].keys()), [
            '重要事項を記した文書の雛形の備え付け又は公開が確認できる。'
        ])

        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況'
        key3 = '・利用を希望する者が自由に見られるようサービス提供契約前に、重要事項を記した文書のひな形を交付する仕組み等がある。'
        key4 = '重要事項を記した文書の雛形の備え付け又は公開が確認できる。'
        self.assertEqual(data[key1][key2][key3][key4], '○')

        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況'
        key3 = '・サービス提供契約前の問い合わせ及び見学に対応する仕組みがある。'
        self.assertEqual(list(data[key1][key2][key3].keys()), [
            '問合せや見学について、パンフレット、ホームページ等に掲載されている。',
            '問合せや見学に対応した記録がある。'
        ])
        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況'
        key3 = '・サービス提供契約前の問い合わせ及び見学に対応する仕組みがある。'
        key4 = '問合せや見学について、パンフレット、ホームページ等に掲載されている。'
        self.assertEqual(data[key1][key2][key3][key4], '○')

        key1 = '1．利用者の権利擁護のための取組'
        key2 = '(4) 利用料に関する説明の実施状況'
        key3 = '・利用者ごとに金銭管理の記録を行い利用者等への報告を行っている。'
        key4 = '利用者ごとに金銭管理を行っている記録がある。'
        self.assertEqual(data[key1][key2][key3][key4], '-')

        key1 = '10．その他、介護サービスの質の確保のために行っていること'
        key2 = '(26) 介護サービスの提供のためのマニュアル等の活用及び見直しの実施状況'
        key3 = '・マニュアル等の見直しについて検討している。'
        key4 = '見直しについて検討された記録がある。'
        self.assertEqual(data[key1][key2][key3][key4], '○')

    # 1．利用者の権利擁護のための取組
    def test_parse_checklist_table01(self):
        f = open('testdata/unei_table01.html', 'r')
        page_text = f.read()
        f.close()
        soup = BeautifulSoup(page_text, 'html.parser')
        table = soup.select_one('table')
        data = UneiPage.parse_checklist(table)

        self.maxDiff = None # テスト結果のデバッグ出力強化
        self.assertEqual(data, {
            '(1) サービス提供開始時のサービス内容の説明及び同意の取得状況': {
                '・サービス利用契約の際、利用申込者の判断能力に応じて、代理人等との契約を行ったり、立会人を求めている。': {
                    '利用者の家族、代理人等と交わした契約書等がある。': '○'
                },
                '・サービス提供契約前の問い合わせ及び見学に対応する仕組みがある。': {
                    '問合せや見学について、パンフレット、ホームページ等に掲載されている。': '○',
                    '問合せや見学に対応した記録がある。': '○'
                },
                '・入居の受入にかかる基準や資格等があり、入居前に提示する仕組みがある。': {
                    '入居の受入にかかる基準や資格等について、パンフレット又は契約書等に明記している。': '○'
                },
                '・利用を希望する者が自由に見られるようサービス提供契約前に、重要事項を記した文書のひな形を交付する仕組み等がある。': {
                    '重要事項を記した文書の雛形の備え付け又は公開が確認できる。': '○'
                },
                '・利用申込者に対し、サービスの重要事項について説明し、サービス提供開始について同意を得ている。': {
                    '重要事項を記した文書に、利用申込者等の署名等がある。': '○'
                },
                '・退居を求める場合の基準について、利用者等に説明し、同意を得ている。': {
                    '退居の基準が記載されている契約書等に、利用者等の署名等がある。': '○'
                }
            },
            '(2) 利用者等の情報の把握及び課題分析の実施状況': {
                '・利用者等の希望、利用者の能力、環境等を把握している。': {
                    '利用者等の希望、有する能力、置かれている環境等の記録がある。': '○'
                }
            },
            '(3) 利用者に応じたサービス計画の作成、同意の取得状況': {
                '・サービス計画について、利用者等に説明し、同意を得ている。': {
                    '同意を得るための文書に、利用者等の署名等がある。': '○'
                },
                '・サービス計画には、利用者ごとのサービスの目標が記載されている。': {
                    'サービス計画に、サービスの目標の記載がある。': '○'
                },
                '・サービス計画は利用者やその家族の希望を踏まえて作成している。': {
                    '利用者等の希望が記入されたサービス計画やサービス計画の検討会議を行った記録がある。': '○'
                }
            },
            '(4) 利用料に関する説明の実施状況': {
                '・利用者ごとに金銭管理の記録を行い利用者等への報告を行っている。': {
                    '利用者ごとに金銭管理を行っている記録がある。': '-',
                    '利用者等に対して、管理している金銭の収支や残高について報告した記録がある。': '-'
                },
                '・利用者に対して、利用明細を交付している。': {
                    'サービス提供内容（介護保険以外の費用も含む）が記載されている請求明細書（写）がある。': '○'
                },
                '・利用者等に対して、利用料の計算方法について説明し、同意を得ている。': {
                    '利用料の計算方法についての同意を得るための文書に、利用者等の署名等がある。': '○'
                }
            }
        })

    # 2．利用者本位の介護サービスの提供
    def test_parse_checklist_table02(self):
        self.assertTrue(True) # TODO

    # 3．相談、苦情等の対応のために講じている措置
    def test_parse_checklist_table03(self):
        self.assertTrue(True) # TODO

    # 4．サービスの内容の評価や改善等
    def test_parse_checklist_table04(self):
        self.assertTrue(True) # TODO

    # 5．サービスの質の確保、透明性の確保等のための外部機関等との連携
    def test_parse_checklist_table05(self):
        self.assertTrue(True) # TODO

    # 6．適切な事業運営の確保
    def test_parse_checklist_table06(self):
        self.assertTrue(True) # TODO

    # 7．事業所の運営管理、業務分担、情報の共有等
    def test_parse_checklist_table07(self):
        self.assertTrue(True) # TODO

    # 8．安全管理及び衛生管理
    def test_parse_checklist_table08(self):
        self.assertTrue(True) # TODO

    # 9．情報の管理、個人情報保護等
    def test_parse_checklist_table09(self):
        self.assertTrue(True) # TODO

    # 10．その他、介護サービスの質の確保のために行っていること
    def test_parse_checklist_table10(self):
        self.assertTrue(True) # TODO
